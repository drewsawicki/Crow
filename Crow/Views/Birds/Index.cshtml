@model Crow.ViewModels.BirdIndexViewModel

@{
    ViewData["Title"] = "Index";
    var searchString = ViewBag.SearchString;
    var sortOrder = ViewBag.SortOrder;
}

<div class="d-flex justify-content-between align-items-center align-text-bottom mt-4">
    <h2 class="page-header">Discover</h2>

    <!-- Sort Button -->
    @using (Html.BeginForm())
    {
        <div class="d-flex align-items-center">
            <!-- Search Bar -->
            <form asp-action="Index" method="get">
                <div class="input-wrapper rounded-pill">
                    <button type="submit" class="btn crow-btn-primary color-3 search rounded-circle">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                    <input type="text" name="searchString" placeholder="Search..." value="@ViewBag.SearchString" />
                    <a class="btn close-btn rounded-circle" asp-action="Index" asp-route-sortOrder="com" asp-route-searchString="">
                        <i class="fa-solid fa-times"></i>
                    </a>
                </div>
            </form>
        </div>
    }
</div>

<div class="d-flex align-items-center justify-content-start mt-5">
    <button class="btn sort-btn dropdown-toggle ms-0 rounded-pill" type="button" id="sortMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
        Sort
    </button>
    <button class="btn sort-btn dropdown-toggle ms-1 rounded-pill" type="button" id="sortMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
        Filter
    </button>
    <ul class="dropdown-menu" aria-labelledby="sortMenuButton">
        @if (sortOrder != "com")
        {
            <li>
                @Html.ActionLink("Common Name", "Index", new { sortOrder = "com", searchString = searchString }, new { @class = "dropdown-item" })
            </li>
        }
        @if (sortOrder != "com_desc")
        {
            <li>
                @Html.ActionLink("Common Name (z-a)", "Index", new { sortOrder = "com_desc", searchString = searchString }, new { @class = "dropdown-item" })
            </li>
        }
        @if (sortOrder != "sci")
        {
            <li>
                @Html.ActionLink("Scientific Name", "Index", new { sortOrder = "sci", searchString = searchString }, new { @class = "dropdown-item" })
            </li>
        }
        @if (sortOrder != "sci_desc")
        {
            <li>
                @Html.ActionLink("Scientific Name (z-a)", "Index", new { sortOrder = "sci_desc", searchString = searchString }, new { @class = "dropdown-item" })
            </li>
        }
    </ul>
</div>
<div class="card-background mt-1">
    <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
        @foreach (var item in Model.Birds)
        {
            <div class="col">
                <div class="card h-100">
                    <div class="card-body p-2">
                        <div class="d-flex justify-content-between">
                            <h5 class="card-title mb-0" style="max-width:80%; word-wrap: break-word;">
                                @Html.DisplayFor(modelItem => item.CommonName)
                            </h5>
                            
                            <div class="dropdown">
                                <h5 class="card-title mb-0" data-bs-toggle="dropdown" aria-expanded="false" style="cursor: pointer; flex-shrink: 0;">
                                    <i class="fa-solid fa-ellipsis"></i>
                                </h5>
                                @if (Model.UserBirdIds.Contains(item.Id))
                                {
                                    <i class="fa-solid fa-binoculars" title="You've seen this bird"></i>
                                }
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-action="AddToLifeList" asp-route-id="@item.Id">
                                            Add to life list
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <p class="card-text mt-2">@Html.DisplayFor(modelItem => item.ScientificName)</p>
                    </div>
                    <div class="d-flex p-2 mt-2">
                        
                    </div>
                </div>
            </div>

        }
    </div>
</div>

@{
    var prevDisabled = !Model.Birds.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Birds.HasNextPage ? "disabled" : "";
}

<div class="page-btn-nav justify-content-center ms-0">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-searchString="@searchString"
       asp-route-pageNumber="@(Model.Birds.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn crow-btn-secondary @prevDisabled">
        <i class="fa-solid fa-angle-left"></i>
    </a>
    <a asp-action="Index"
       asp-route-sortOrder=@sortOrder
       asp-route-searchString="@searchString"
       asp-route-pageNumber="@(Model.Birds.PageIndex + 1)"
       class="btn crow-btn-secondary @nextDisabled">
        <i class="fa-solid fa-angle-right"></i>
    </a>
</div>